{"version":3,"file":"freeDOM.min.js","mappings":"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","sources":["webpack:///./src/utils.ts","webpack:///./src/freeDOM-core.ts","webpack:///./src/freeDOM.ts"],"sourcesContent":["/* freeDOM\r\n * ©2022 LJM12914. https://github.com/openink/freeDOM\r\n * Licensed under MIT License. https://github.com/openink/freeDOM/blob/main/LICENSE\r\n*/\r\nexport default (()=>{\r\n    return{\r\n        E(argument? :string, type? :string, value? :any) :never{\r\n            if(argument === undefined) throw new Error(\"An error occured.\");\r\n            else throw new Error(`Argument '${argument}' ${type ? `should be a ${type}` : \"is invalid\"}${value ? `, got ${value}` : \"\"}.`);\r\n        },\r\n        EE(message :any) :never{throw new Error(message);},\r\n        parseIDOrString(input :HTMLElement | string) :HTMLElement{\r\n            if(typeof input == \"string\") return this.e(input) as HTMLElement;\r\n            else return input;\r\n        },\r\n        isDescendant(element :HTMLElement, target :HTMLElement) :boolean{\r\n            while(element.tagName != \"HTML\"){\r\n                element = element.parentNode! as HTMLElement;\r\n                if(element === target) return true; \r\n            }\r\n            return false;\r\n        },\r\n        randoma2z029(length :number) :string{\r\n            var s :string = \"\";\r\n            for(let i = 0; i < length; i++){\r\n                let r = Math.floor(Math.random() * 36);\r\n                if(r < 10) s += r;\r\n                else s += String.fromCharCode(r + 87);\r\n            }\r\n            return s;\r\n        },\r\n        e(s :string, scope? :HTMLElement | Document) :Node[] | Node{\r\n            if(scope === undefined || !(scope instanceof HTMLElement)) scope = document;\r\n            let a :NodeList = scope.querySelectorAll(s);\r\n            if(!a.length) return [];\r\n            //note:当一个页面存在相同ID元素时不会走这里，而会返回数组，因为说好了是querySelectorAll了并且本来就不应该有重复ID，不能怪我啊\r\n            if(a.length == 1 && s.match(/^.*#[^\\s]*$/)) return a[0];\r\n            else return Array.from(a);\r\n        },\r\n        isInDocument(element :HTMLElement) :boolean{\r\n            return this.isDescendant(element, (this.e(\"html\") as Node[])[0] as HTMLElement);\r\n        },\r\n        precisePop(ele :any, array :any[]) :any[] | null{\r\n            if(array.indexOf(ele) === -1) return null;\r\n            return array.splice(array.indexOf(ele), 1);\r\n        },\r\n        //递归冻结对象\r\n        constantize(obj :anyObject) :void{\r\n            Object.freeze(obj);\r\n            for(let i = 0; i < Object.keys(obj).length; i++) if(typeof obj[Object.keys(obj)[i]] == \"object\") this.constantize(obj[Object.keys(obj)[i]]);\r\n        }\r\n    }\r\n})();","import utils from \"./utils\";\r\nimport nodeBase from \"./nodeBase\";\r\nexport default class FreeDOMCore{\r\n    #parent :FreeDOM;\r\n    #messages :any[];\r\n    #numeralID :number;\r\n    #rootNode :HTMLElement;\r\n    #id :string;\r\n    #key :string;\r\n    //#nodeStore :nodeDescription[];\r\n    //#nodeTree :nodeDescription;\r\n    #alerts = [\r\n        \"DO NOT CALL ME FROM OUTSIDE THE FreeDOM, PLUS YOU CANNOT DO ANYTHING WITHOUT SECRET KEY.\"\r\n    ];\r\n    constructor(parent :FreeDOM, messages :any[], numeralID :number, rootNode :HTMLElement, id :string, key :string){\r\n        this.#parent = parent;\r\n        this.#messages = messages;\r\n        this.#numeralID = numeralID;\r\n        this.#rootNode = rootNode;\r\n        this.#id = id;\r\n        this.#key = key;\r\n        //this.#nodeTree = this.#generateNodeTree(this.#rootNode);\r\n        //this.#nodeStore = this.#parseNodeTree(this.#nodeTree); //parse比generate快一点。\r\n    }\r\n    render(cb :(arg :Document) => any) :void{\r\n        var alerts = [\r\n            \"CANNOT CHANGE THE DOCUMENT OBJECT IN THE PROXY.\",\r\n            \"DONT USE THIS IN THE PROXY IN ORDER TO PREVENT UNKNOWN BUGS.\"\r\n        ];\r\n        const p = new Proxy(document, {\r\n            get(document, property, receiver){\r\n                //console.log(document, property, receiver); //succeed:没必要发一堆东西进控制台了\r\n                if(property in document){\r\n                    const fuck_typescript :any = (document as anyObject)[property as string];\r\n                    if(fuck_typescript instanceof Function){ //拦截document的函数\r\n                        return new Proxy(fuck_typescript, {\r\n                            apply(target, thisArg, argArray){\r\n                                //todo:实现拦截！\r\n                                return target.bind(document)(...argArray); //note:暂时不作拦截，结果是真实DOM\r\n                            }\r\n                        });\r\n                    }\r\n                    else return fuck_typescript;\r\n                }\r\n                else return undefined;\r\n            },\r\n            //警告以下操作\r\n            has(document, property){\r\n                console.warn(alerts[1]);\r\n                return Reflect.has(document, property);\r\n            },\r\n            isExtensible(document){\r\n                console.warn(alerts[1]);\r\n                return Reflect.isExtensible(document);\r\n            },\r\n            getPrototypeOf(document){\r\n                console.warn(alerts[1]);\r\n                return Reflect.getPrototypeOf(document);\r\n            },\r\n            ownKeys(document){\r\n                console.warn(alerts[1]);\r\n                return Reflect.ownKeys(document);\r\n            },\r\n            //拦截以下操作\r\n            setPrototypeOf(document, value){\r\n                console.warn(alerts[0]);\r\n                return false;\r\n            },\r\n            set(document, property, value, receiver){\r\n                console.warn(alerts[0]);\r\n                return false;\r\n            },\r\n            defineProperty(document, property, attributes){\r\n                console.warn(alerts[0]);\r\n                return false;\r\n            },\r\n            deleteProperty(document, property){\r\n                console.warn(alerts[0]);\r\n                return false;\r\n            },\r\n            preventExtensions(document){\r\n                console.warn(alerts[0]);\r\n                return false;\r\n            },\r\n            getOwnPropertyDescriptor(document, property){\r\n                console.warn(alerts[0]);\r\n                return undefined;\r\n            }\r\n            //construct(target, argArray, newTarget){} //note:document不具有[[Construct]]内部方法。https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Proxy/Proxy/construct\r\n        });\r\n        cb(p);\r\n    }\r\n    n(\r\n        tagNameOrArgs :string | anyObject,\r\n        attributes :kvObject,\r\n        parentNodeInfo? :nodeDescription | string | Element,\r\n        childNodes? :nodeDescription[] | string[] | Element[] | Text[]\r\n    ){\r\n        //todo:创建虚拟节点\r\n    }\r\n    createElement(tagNameOrArgs :string | anyObject, attributes :kvObject, parentNodeInfo? :nodeDescription | string | Element, childNodes? :nodeDescription[] | string[] | Element[] | Text[]){\r\n        return this.n(tagNameOrArgs, attributes, parentNodeInfo, childNodes);\r\n    }\r\n    ne(){\r\n        \r\n    }\r\n    createElementFromExistNode(){return this.ne();}\r\n    u(){\r\n\r\n    }\r\n    buildElement(){return this.u();}\r\n    getID() :string{return this.#id;}\r\n    getRootNode() :HTMLElement{return this.#rootNode;}\r\n    __setRootNodeWithKey__(key :string, rootNode :HTMLElement) :HTMLElement | undefined{\r\n        if(key === this.#key){\r\n            this.#rootNode = rootNode;\r\n            return this.#rootNode;\r\n        }\r\n        else utils.EE(this.#alerts[0]);\r\n    }\r\n    __setIDWithKey__(key :string, id :string) :string | undefined{\r\n        if(key === this.#key){\r\n            this.#id = id;\r\n            return this.#id;\r\n        }\r\n        else utils.EE(this.#alerts[0]);\r\n    }\r\n    /*#generateNodeStore = (rootNode :HTMLElement) :nodeDescription[]=>{\r\n        var o :nodeDescription;\r\n        while(true){\r\n            o.id = \r\n        }\r\n    }\r\n    #generateNodeTree = (rootNode :HTMLElement) :nodeDescription=>{\r\n\r\n    }\r\n    #parseNodeTree = (nodeTree :nodeDescription) :nodeDescription[]=>{\r\n\r\n    }\r\n    #parseNodeStore = (nodeStore :nodeDescription[]) :nodeDescription=>{\r\n\r\n    }*/\r\n}","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/openink/freeDOM\r\n * Licensed under MIT License. https://github.com/openink/freeDOM/blob/main/LICENSE\r\n*/\r\nimport FreeDOMCore from \"./freeDOM-core\";\r\nimport utils from \"./utils\";\r\ninterface newArgs{\r\n    id :string;\r\n    rootNode :HTMLElement | string;\r\n}\r\ninterface updateByIDArgs{\r\n    id :string;\r\n    rootNode :HTMLElement | string;\r\n}\r\ninterface updateByNodeArgs{\r\n    id :string;\r\n    rootNode :HTMLElement | string;\r\n}\r\nconsole.warn(\"freeDOM ©LJM12914. https://github.com/openink/freeDOM \\r\\nYou are using an unminified version of freeDOM, which is not suitable for production use.\");\r\nclass FreeDOM{\r\n    #instances :FreeDOMCore[] = [];\r\n    #keys :string[] = [];\r\n    #messages :any[] = [];\r\n    constructor(){\r\n        console.warn(\"creating new FreeDOM instance.\");\r\n    }\r\n    id(id :string) :FreeDOMCore | null{\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getID() === id) return this.#instances[i];\r\n        return null;\r\n    }\r\n    rootNode(rootNode :HTMLElement | string) :FreeDOMCore | null{\r\n        rootNode = utils.parseIDOrString(rootNode);\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getRootNode() === rootNode) return this.#instances[i];\r\n        return null;\r\n    }\r\n    new(args :newArgs) :boolean{\r\n        args.rootNode = utils.parseIDOrString(args.rootNode);\r\n        //排除已经是目前作用域或目前作用域子元素的新增\r\n        if(!utils.isInDocument(args.rootNode)){\r\n            console.warn(`${args.rootNode} is not in document.`);\r\n            return false;\r\n        }\r\n        for(let i = 0; i < this.#instances.length; i++) if(utils.isDescendant(args.rootNode, this.#instances[i].getRootNode()) || args.rootNode === this.#instances[i].getRootNode()){\r\n            console.warn(`${args.rootNode} is already a descendant of a rootNode of an exist scope, thus freeDOM won't add it.`);\r\n            return false;\r\n        }\r\n        //排除原数组中是新增作用域子元素的元素\r\n        for(let i = 0; i < this.#instances.length; i++) if(utils.isDescendant(this.#instances[i].getRootNode(), args.rootNode)) utils.precisePop(this.#instances[i].getRootNode(), this.#instances);\r\n        const key = utils.randoma2z029(20);\r\n        this.#instances.push(new FreeDOMCore(this, this.#messages, this.#instances.length, args.rootNode, args.id, key));\r\n        this.#keys.push(key);\r\n        return true;\r\n    }\r\n    existsID(id :string) :HTMLElement | null{\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getID() === id) return this.#instances[i].getRootNode();\r\n        return null;\r\n    }\r\n    existsNode(rootNode :HTMLElement) :string | null{\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getRootNode() === rootNode) return this.#instances[i].getID();\r\n        return null;\r\n    }\r\n    updateByID(args :updateByIDArgs) :HTMLElement | null{\r\n        args.rootNode = utils.parseIDOrString(args.rootNode);\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getID() === args.id) this.#instances[i].__setRootNodeWithKey__(this.#keys[i], args.rootNode);\r\n        return null;\r\n    }\r\n    updateByNode(args :updateByNodeArgs) :string | null{\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getRootNode() === args.rootNode) this.#instances[i].__setIDWithKey__(this.#keys[i], args.id);\r\n        return null;\r\n    }\r\n    delete(arg :string | HTMLElement) :{id :string, rootNode :HTMLElement} | null{\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getID() === arg || this.#instances[i].getRootNode() === arg){\r\n            utils.precisePop(this.#instances[i], this.#instances);\r\n            return{\r\n                id: this.#instances[i].getID(),\r\n                rootNode: this.#instances[i].getRootNode()\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    e(s :string, scope? :HTMLElement | Document) :Node | Node[]{return utils.e(s, scope);}\r\n}\r\nutils.constantize(FreeDOM);\r\n(window as any).FreeDOM = FreeDOM;"],"names":["E","argument","type","value","undefined","Error","EE","message","parseIDOrString","input","this","e","isDescendant","element","target","tagName","parentNode","randoma2z029","length","s","i","r","Math","floor","random","String","fromCharCode","scope","HTMLElement","document","a","querySelectorAll","match","Array","from","isInDocument","precisePop","ele","array","indexOf","splice","constantize","obj","Object","freeze","keys","FreeDOMCore","constructor","parent","messages","numeralID","rootNode","id","key","render","cb","Proxy","get","property","receiver","fuck_typescript","Function","apply","thisArg","argArray","bind","has","Reflect","isExtensible","getPrototypeOf","ownKeys","setPrototypeOf","set","defineProperty","attributes","deleteProperty","preventExtensions","getOwnPropertyDescriptor","n","tagNameOrArgs","parentNodeInfo","childNodes","createElement","ne","createElementFromExistNode","u","buildElement","getID","getRootNode","__setRootNodeWithKey__","utils","__setIDWithKey__","FreeDOM","new","args","push","existsID","existsNode","updateByID","updateByNode","delete","arg","window"],"sourceRoot":""}