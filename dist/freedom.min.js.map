{"version":3,"file":"freedom.min.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///../utils/generic.ts","webpack:///../utils/element.ts","webpack:///./src/utils/vdom.misc.ts","webpack:///./src/utils/vdom.build.ts","webpack:///./src/utils/vdom.ts","webpack:///./src/utils/vdom.get.ts","webpack:///./src/freedom.ts","webpack:///./src/utils/misc.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/* utils\r\n * ©2022 LJM12914. https://github.com/wheelsmake/utils\r\n * Licensed under MIT License. https://github.com/wheelsmake/utils/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"./index\";\r\nexport function randoma2Z(length :number) :string{ //52\r\n    var s :string = \"\";\r\n    for(let i = 0; i < length; i++){\r\n        let r = Math.floor(Math.random() * 52);\r\n        if(r > 25) s += String.fromCharCode(r + 71);\r\n        else s += String.fromCharCode(r + 65);\r\n    }\r\n    return s;\r\n}\r\nexport function randoma2z029(length :number) :string{ //36\r\n    var s :string = \"\";\r\n    for(let i = 0; i < length; i++){\r\n        let r = Math.floor(Math.random() * 36);\r\n        if(r < 10) s += r;\r\n        else s += String.fromCharCode(r + 87);\r\n    }\r\n    return s;\r\n}\r\nexport function precisePop(ele :any, array :any[]) :any[] | null{\r\n    if(array.indexOf(ele) === -1) return null;\r\n    return array.splice(array.indexOf(ele), 1);\r\n}\r\n//递归冻结对象\r\nexport function constantize(obj :anyObject) :void{\r\n    Object.freeze(obj);\r\n    for(let i = 0; i < Object.keys(obj).length; i++) if(typeof obj[Object.keys(obj)[i]] == \"object\") constantize(obj[Object.keys(obj)[i]]);\r\n}\r\nexport function E(argument :string, type? :string, value? :any, reason? :string) :never{\r\n    if(argument === undefined) throw new Error(\"An error occured.\");\r\n    else{\r\n        console.info(\"ERROR INFO: argument\", argument, \",type\", type, \",value\", value, \",reason\", reason); //为了拿到真正的value，其他类型toString后啥信息都没了\r\n        throw new Error(`Argument '${argument}' ${type ? `should be a(an) ${type}` : \"is invalid\"}${reason ? `, reason: ${reason}` : \"\"}${value ? `, got ${value}` : \"\"}.`);\r\n    }\r\n}\r\nexport function EE(message :any) :never{throw new Error(message);}\r\nexport function repeat(item :any, count :number) :any[]{\r\n    if(typeof count != \"number\" || count < 1) utils.generic.E(\"count\", \"number smaller than 1\", count);\r\n    var arr :any[] = [];\r\n    arr[count - 1] = \" \";\r\n    return arr.fill(item, 0, count);\r\n}","/* utils\r\n * ©2022 LJM12914. https://github.com/wheelsmake/utils\r\n * Licensed under MIT License. https://github.com/wheelsmake/utils/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"./index\";\r\nexport function e(s :string, scope? :Element | Document) :Node[] | Node{\r\n    if(scope === undefined || !(scope instanceof Element)) scope = document;\r\n        let a :NodeList = scope.querySelectorAll(s);\r\n        if(!a.length) return [];\r\n        //note:当一个页面存在相同ID元素时不会走这里，而会返回数组，因为说好了是querySelectorAll了并且本来就不应该有重复ID，不能怪我啊\r\n        if(a.length == 1 && s.match(/^.*#[^\\s]*$/)) return a[0];\r\n        else return Array.from(a);\r\n}\r\nexport function isDescendant(possibleDescendant :Element, possibleParent :Element) :boolean{\r\n    while(possibleDescendant.tagName != \"HTML\"){\r\n        possibleDescendant = possibleDescendant.parentNode! as Element;\r\n        if(possibleDescendant === possibleParent) return true; \r\n    }\r\n    return false;\r\n}\r\nexport function isInDocument(element :Element) :boolean{\r\n    return isDescendant(element, (e(\"html\") as Node[])[0] as Element);\r\n}\r\nexport function isChild(element :Element, target :Element) :boolean{\r\n    const children = target.childNodes;\r\n    for(let i = 0; i < children.length; i++) if(element === children[i]) return true;\r\n    return false;\r\n}\r\nexport function toHTML(HTML :string) :Node[]{\r\n    if(HTML === \"\" || typeof HTML != \"string\") utils.generic.E(\"HTML\", \"string\", HTML);\r\n    const ele = document.createElement(\"div\");\r\n    ele.innerHTML = HTML;\r\n    return getInnerNodes(ele);\r\n}\r\nexport function getInnerNodes(el :Node | Element) :Node[]{\r\n    var nodes :Node[] = [];\r\n    for(let i = 0; i < el.childNodes.length; i++) nodes[i] = el.childNodes[i].cloneNode(true);\r\n    return nodes;\r\n}\r\n//剥壳器\r\nexport function hatch(element :Element, remove? :boolean) :Node[]{\r\n    //note:Nodelist类型会实时同步造成不稳定的for循环，必须转换为Node[]！\r\n    const par = element.parentElement!, children :Node[] = Array.from(element.childNodes);\r\n    for(let i = 0; i < children.length; i++) par.insertBefore(children[i], element);\r\n    if(remove === true) element.remove();\r\n    return children;\r\n}\r\n//fixme:这个方法特异性太强了吧，能不能不要放在这里？\r\n//最终渲染方法，老祖宗求你别出bug\r\nexport function render(HTML :string | Element | HTMLCollection | Element[] | Node | NodeList | Node[], element :Element, insertAfter? :boolean, append? :boolean, disableDF? :boolean) :Node[]{\r\n    if(element.parentElement === null) utils.generic.EE(\"cannot render by '<html>' element, since it's root of document.\");\r\n    var html :Node[] = [];\r\n    if(typeof HTML == \"string\") html = toHTML(HTML);\r\n    else if(HTML instanceof Element || HTML instanceof Node) html[0] = HTML.cloneNode(true);\r\n    else if(HTML instanceof HTMLCollection || HTML instanceof NodeList) for(let i = 0; i < HTML.length; i++) html[i] = HTML.item(i)!.cloneNode(true);\r\n    else html = HTML;\r\n    const Rhtml = [...html].reverse(), parent = element.parentElement;\r\n    if(append === true) for(let i = 0; i < html.length; i++) element.append(html[i]);\r\n    else if(append === false) for(let i = 0; i < Rhtml.length; i++) element.prepend(Rhtml[i]);\r\n    else if(insertAfter === true){\r\n        if(!element.nextSibling) for(let i = 0; i < Rhtml.length; i++) parent!.append(Rhtml[i]);\r\n        else for(let i = 0; i < Rhtml.length; i++) parent!.insertBefore(Rhtml[i], element.nextSibling);\r\n    }\r\n    else if(insertAfter === false) for(let i = 0; i < html.length; i++) parent!.insertBefore(html[i], element);\r\n    else for(let i = 0; i < html.length; i++) element.append(html[i]);\r\n    //todo:加入作用域\r\n    return html;\r\n}","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/wheelsmake/freeDOM\r\n * Licensed under MIT License. https://github.com/wheelsmake/freeDOM/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"../../../utils/index\";\r\nimport * as localUtils from \"./index\";\r\nexport function testNodeType(node :Node) :\"Text\" | \"Element\" | false{\r\n    if(node instanceof Text) return \"Text\";\r\n    else if(node instanceof Element) return \"Element\";\r\n    else return false;\r\n}\r\nexport function isVText(input :any) :boolean{\r\n    return(\r\n        typeof input == \"object\"\r\n     && \"id\" in input\r\n     && \"text\" in input\r\n     && \"instance\" in input\r\n     && Object.keys(input).length == 3\r\n    );\r\n}\r\nexport function isVElement(input :any) :boolean{\r\n    return(\r\n        typeof input == \"object\"\r\n     && \"id\" in input\r\n     && \"tagName\" in input\r\n     && \"attrs\" in input\r\n     && \"events\" in input\r\n     && \"children\" in input\r\n     && \"instance\" in input\r\n     && Object.keys(input).length == 6\r\n    );\r\n}\r\nexport function processNLIText(textNode :Text) :string | null{\r\n    //fixme:存在末尾\\n文本节点被浏览器自动加回去的问题，但不影响vDOM\r\n    const textContent = textNode.textContent!,\r\n          //这个是用来标记原字符串是否需要处理的\r\n          signContent = textContent.replace(/\\n\\s*/g, \"\"), //只有\\n也要删\r\n          parent = textNode.parentElement as Element; //replace不改动原字符串\r\n    //排除可编辑内容的元素的内容\r\n    if(parent.tagName == \"TEXTAREA\" || (parent instanceof HTMLElement && parent.isContentEditable)) return textContent;\r\n    else{\r\n        if(signContent === \"\"){ //完全就是垃圾节点\r\n            textNode.remove();\r\n            return null;\r\n        }\r\n        else if(signContent !== textContent){ //部分垃圾\r\n            textNode.textContent = textContent.replace(/\\n\\s*/g, \" \"); //更新文本节点，插入空格，保持视觉效果\r\n            return textNode.textContent; //fixed:signContent和textContent都不一样，干嘛返回signContent啊\r\n        }\r\n        else return textContent; //没有垃圾\r\n    }\r\n}","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/wheelsmake/freeDOM\r\n * Licensed under MIT License. https://github.com/wheelsmake/freeDOM/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"../../../utils/index\";\r\nimport * as localUtils from \"./index\";\r\nimport * as misc from \"./vdom.misc\";\r\n\r\n//全量\r\nexport function Attr(element :Element, data :vElement) :void{\r\n    const attrs = data.attrs;\r\n    for(let i in attrs) deltaAttr(element, i, attrs[i]);\r\n}\r\nexport function Event(element :Element, data :vElement){\r\n    //todo:\r\n}\r\nexport function Children(element :Element, data :vElement) :void{\r\n    if(data.children === null) return;\r\n    else{\r\n        const children = data.children;\r\n        for(let i = 0; i < children.length; i++) deltaChildren(element, children[i]); //递归产生处\r\n    }\r\n}\r\n\r\n//增量\r\nexport function deltaAttr(element :Element, key :string, value :string) :void{\r\n    element.setAttribute(key, value);\r\n}\r\nexport function deltaEvent(element :Element) :void{\r\n    //todo:\r\n\r\n}\r\nexport function deltaChildren(element :Element, childrenVDOM :vDOM) :void{\r\n    element.appendChild(localUtils.vDOM.buildNode(childrenVDOM));\r\n}","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/wheelsmake/freeDOM\r\n * Licensed under MIT License. https://github.com/wheelsmake/freeDOM/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"../../../utils/index\";\r\nimport * as localUtils from \"./index\";\r\n\r\n//本地导入\r\nimport * as misc from \"./vdom.misc\";\r\nimport * as get from \"./vdom.get\";\r\nimport * as build from \"./vdom.build\";\r\n\r\nexport * as misc from \"./vdom.misc\";\r\nexport * as get from \"./vdom.get\";\r\nexport * as build from \"./vdom.build\";\r\n\r\nexport function createVElement(\r\n        tagName :string,\r\n        attrs :SSkvObject | null,\r\n        events :eventRecord | null,\r\n        children :childrenArray | null,\r\n        instance :Element | null\r\n    ) :vElement{\r\n    if(typeof tagName != \"string\") utils.generic.E(\"tagName\", \"string\", tagName);\r\n    //不完整验证\r\n    if(attrs !== null && attrs.toString() != \"[object Object]\") utils.generic.E(\"attrs\", \"SSkvObject\", attrs);\r\n    if(events !== null && events.toString() != \"[object Object]\") utils.generic.E(\"events\", \"eventRecord\", events);\r\n    if(children !== null && !(children instanceof Array)) utils.generic.E(\"children\", \"childrenArray\", children);\r\n    if(instance !== null && !(instance instanceof Element)) utils.generic.E(\"instance\", \"Element\", instance);\r\n    return{\r\n        id: utils.generic.randoma2Z(15),\r\n        tagName: tagName.toLocaleLowerCase(), //fixed:我是傻逼\r\n        attrs,\r\n        events,\r\n        children,\r\n        instance\r\n    };\r\n}\r\nexport function createVText(text :string | null, instance :Text | null) :vText | null{\r\n    //不完整验证\r\n    if(instance !== null && !(instance instanceof Text)) utils.generic.E(\"instance\", \"Text\", instance);\r\n    if(typeof text == \"string\") return{\r\n        id: utils.generic.randoma2Z(15),\r\n        text,\r\n        instance\r\n    };\r\n    else if(text === null) return null;\r\n    else{\r\n        utils.generic.E(\"text\", \"string | null\" , text);\r\n        return null; //ts真无聊\r\n    }\r\n}\r\n/**`null` 仅在垃圾文本节点会出现*/\r\nexport function parseNode(node :Node) :vDOM | null{\r\n    const test = misc.testNodeType(node);\r\n    if(test == \"Text\"){\r\n        const text = node as Text;\r\n        return createVText(misc.processNLIText(text), text); //createVText已经自动处理null情况了\r\n    }\r\n    else if(test == \"Element\"){\r\n        const element = node as Element;\r\n        return createVElement(element.tagName, get.Attr(element), get.Event(element), get.Children(element), element);\r\n    }\r\n    else{\r\n        utils.generic.E(\"node\", \"instance\" , node);\r\n        return null; //ts真无聊\r\n    }\r\n}\r\nexport function buildNode(vDOM :vDOM) :instance{\r\n    if(misc.isVElement(vDOM)){\r\n        vDOM = vDOM as vElement; //ts真无聊\r\n        const instance = document.createElement(vDOM.tagName);\r\n        build.Attr(instance, vDOM);\r\n        build.Event(instance, vDOM);\r\n        build.Children(instance, vDOM);\r\n        return instance;\r\n    }\r\n    else if(misc.isVText(vDOM)){\r\n        vDOM = vDOM as vText; //ts真无聊\r\n        return document.createTextNode(vDOM.text);\r\n    }\r\n    else{\r\n        utils.generic.E(\"vDOM\", \"vDOM\", vDOM);\r\n        return new Element(); //ts真无聊\r\n    }\r\n}\r\nexport function unlink(vDOM :vDOM) :vDOM{\r\n    vDOM.instance = null;\r\n    if(misc.isVElement(vDOM)){\r\n        vDOM = vDOM as vElement;\r\n        if(vDOM.children !== null) for(let i = 0; i < vDOM.children.length; i++){\r\n            //todo:解除instance和event绑定\r\n        }\r\n    }\r\n    return vDOM; //seize:不然编译不通过\r\n}","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/wheelsmake/freeDOM\r\n * Licensed under MIT License. https://github.com/wheelsmake/freeDOM/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"../../../utils/index\";\r\nimport * as localUtils from \"./index\";\r\n//这个东西不能导出，否则ts会无法编译\r\nimport * as FreeDOM from \"../freedom\";\r\nimport * as misc from \"./vdom.misc\";\r\nexport function Attr(element :Element) :SSkvObject | null{\r\n    const test = misc.testNodeType(element);\r\n    if(test == \"Text\" || test === false) utils.generic.E(\"element\", \"Element\", element, \"only Element have attributes\"); //文本节点不存在attr\r\n    const attr = element.attributes; //typeof NamedNodeMap\r\n    var result :SSkvObject = {};\r\n    for(let i = 0; i < attr.length; i++) result[attr[i].name] = attr[i].textContent!; //只要传入已有name就不会出null\r\n    if(Object.keys(result).length === 0) return null;\r\n    else return result;\r\n}\r\nexport function Event(node :Element) :eventRecord | null{\r\n    //传回的是对于Map Entry的引用，也就是说once:true的事件触发并删除后在vDOM里的events也会同步\r\n    if(FreeDOM.eventStore.has(node)) return FreeDOM.eventStore.get(node)!;\r\n    else return null;\r\n}\r\nexport function Children(element :Element/* | Text*/) :childrenArray | null{\r\n    const children :Node[] = Array.from(element.childNodes);\r\n    //argument_solved 2022.7.31:只能用Node[]，因为垃圾文本节点会被删除造成必然缺陷。\r\n    var result :vDOM[] = [];\r\n    for(let i = 0; i < children.length; i++){\r\n        const item = children[i];\r\n        if(item === null){ //这里可以避免缺陷for循环，因为i是对的，一个Element的childNodes不可能item出非Node，走到这里的唯一可能就是NodeList出缺陷了\r\n            console.warn(\"DOM structure was changed during freeDOM is parsing nodes. Please avoid that.\");\r\n            continue;\r\n        }\r\n        const test = misc.testNodeType(item);\r\n        if(test == \"Element\") result.push(localUtils.vDOM.parseNode(item)!); //递归产生处，Element不会null\r\n        else if(test == \"Text\"){\r\n            const node = localUtils.vDOM.parseNode(item); //递归产生处\r\n            if(node !== null) result.push(node);\r\n            //else null表示垃圾文本节点已经被删除，不需要记录了\r\n        }\r\n        //else 应该永远不会走到这里吧\r\n    }\r\n    if(result.length == 0) return null;\r\n    else return result;\r\n}","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/wheelsmake/freeDOM\r\n * Licensed under MIT License. https://github.com/wheelsmake/freeDOM/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"../../utils/index\";\r\nimport * as localUtils from \"./utils/index\";\r\n\r\n//开发模式记录\r\nconsole.info(\"freeDOM ©LJM12914. https://github.com/openink/freeDOM \\r\\nYou are using an unminified version of freeDOM, which is not suitable for production use.\");\r\n\r\n//事件捕获相关hack变量\r\nconst instances :ScopeInstance[] = [], eventStore :eventStore = new Map(); //Map浏览器支持率＞96% on 2022.7.23\r\nexport {instances, eventStore}; //暴露这两个变量给utils\r\n\r\n//hack addEventListener\r\n//不能用window.onload，实际上它是最迟执行的\r\nconst Ep = Element.prototype, Ep_A = Ep as anyObject;\r\n\r\nEp_A.oddEventListener = Ep.addEventListener;\r\nEp.addEventListener = new Proxy(Ep_A.oddEventListener, {\r\n    apply(\r\n        oEL :Function,\r\n        callerElement :Element,\r\n        argArray :[string, Function, boolean | AddEventListenerOptions | undefined, boolean | undefined]\r\n        //第四个参数兼容wantUntrusted\r\n    ){\r\n        /* note:不需要检查type是否合法，因为存在自定义事件的可能\r\n         * 选择记录所有HTML DOM的所有事件，其实也不多\r\n        */\r\n        console.log(callerElement, argArray);\r\n        const [eventName, handler, arg1, arg2] = argArray,\r\n              record = eventStore.get(callerElement),\r\n              useCapture = arg1 !== undefined ? typeof arg1 == \"boolean\" ? arg1 : arg1.capture || false : false; //适应调用参数https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget/addEventListener#syntax\r\n        var processedHandler :Function;\r\n        if(typeof arg1 == \"object\" && arg1[\"once\"] === true){ //处理once情况，调用后立即删除\r\n            processedHandler = new Proxy(handler, {\r\n                apply(target, thisArg, argArray){\r\n                    /* 不知道record会不会保存之前的值，我们还是再获取一遍吧\r\n                     * 既然运行了这个方法就不可能是undefined\r\n                    */\r\n                   console.log(processedHandler);\r\n                    const recordValue = eventStore.get(callerElement)![eventName];\r\n                    //还是得找才能删除\r\n                    for(let i = 0; i < recordValue.length; i++){\r\n                        const thisArg1 = recordValue[i].arg1,\r\n                              thisUseCapture = thisArg1 !== undefined ? typeof thisArg1 == \"boolean\" ? thisArg1 : thisArg1.capture || false : false; //适应调用参数L32\r\n                        if(recordValue[i].handler === processedHandler && thisUseCapture === useCapture){\r\n                            utils.generic.precisePop(recordValue[i], recordValue);\r\n                        }\r\n                    }\r\n                    return Reflect.apply(target, thisArg, argArray);\r\n                }\r\n            });\r\n        }\r\n        else processedHandler = handler;\r\n        if(record !== undefined){ //本元素已被记录\r\n            if(record[eventName] === undefined){\r\n                record[eventName] = [{ //本元素未有该事件，新建数组\r\n                    handler: processedHandler, arg1, arg2\r\n                }];\r\n                argArray[1] = processedHandler; //同L80\r\n            }\r\n            else{  //本元素已有该事件\r\n                /* note:排除会被浏览器丢弃的调用。\r\n                 * 浏览器将type、handler和useCapture完全一致listener认为是同一个，不管其他参数是否相同。\r\n                 * 所以我们需要在这里比较handler和useCapture是否一致，如果没找到完全一致的listener就需要存新的listener\r\n                 * 否则浏览器不会更改已有listener，我们也不会对eventStore作更改\r\n                */\r\n                var isDuplicated = false; //为了能正常return的flag\r\n                //console.log(useCapture);\r\n                for(let i = 0; i < record[eventName].length; i++){\r\n                    const thisArg1 = record[eventName][i].arg1,\r\n                          thisUseCapture = thisArg1 !== undefined ? typeof thisArg1 == \"boolean\" ? thisArg1 : thisArg1.capture || false : false; //适应调用参数L32\r\n                    if(handler === record[eventName][i].handler && useCapture === thisUseCapture){ //找到了所谓完全一致的listener，走吧\r\n                        isDuplicated = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if(!isDuplicated){\r\n                    record[eventName].push({\r\n                        handler: processedHandler, arg1, arg2\r\n                    });\r\n                    //这个不能放到最后，因为如果浏览器没有添加的话就会多出一个，必须在确保浏览器会添加这个事件后再修改参数\r\n                    argArray[1] = processedHandler;\r\n                }\r\n            }\r\n            eventStore.set(callerElement, record);\r\n        }\r\n        else{\r\n            eventStore.set(callerElement, { //本元素未被记录\r\n                [eventName]: [{\r\n                    handler: processedHandler, arg1, arg2\r\n                }]\r\n            });\r\n            argArray[1] = processedHandler; //同L80\r\n        }\r\n        return Reflect.apply(oEL, callerElement, argArray);\r\n    }\r\n});\r\n\r\n\r\nEp_A.oemoveEventListener = Ep.removeEventListener;\r\nEp.removeEventListener = new Proxy(Ep_A.oemoveEventListener, {\r\n    apply(\r\n        omEL :Function,\r\n        callerElement :Element,\r\n        argArray :[string, Function, boolean | AddEventListenerOptions | undefined]\r\n    ){\r\n        console.log(callerElement, argArray);\r\n        const [eventName, handler, arg1] = argArray;\r\n        if(eventStore.has(callerElement)){ //本元素已被记录\r\n            const record = eventStore.get(callerElement)!,\r\n                  useCapture = arg1 !== undefined ? typeof arg1 == \"boolean\" ? arg1 : arg1.capture || false : false; //适应调用参数;\r\n            if(record[eventName] !== undefined){ //本元素已有该类型事件\r\n                /* note:识别真正会被浏览器移除的listener。\r\n                 * 对于大多数浏览器来说，会检查remove的type、handler和useCapture是否一致\r\n                 * 我们也是这样\r\n                 * 对于其他浏览器暂不做支持，因为需要查很多资料，留个todo:吧\r\n                 * https://developer.mozilla.org/zh-CN/docs/Web/API/EventTarget/removeEventListener#:~:text=%E5%8F%AA%E6%9C%89%20capture%20%E9%85%8D%E7%BD%AE%E5%BD%B1%E5%93%8D%20removeEventListener().\r\n                */\r\n                for(let i = 0; i < record[eventName].length; i++){\r\n                    const thisArg1 = record[eventName][i].arg1,\r\n                          thisUseCapture = thisArg1 !== undefined ? typeof thisArg1 == \"boolean\" ? thisArg1 : thisArg1.capture || false : false; //适应调用参数\r\n                    if(handler === record[eventName][i].handler && useCapture === thisUseCapture) utils.generic.precisePop(record[eventName][i], record[eventName]); //存在对应handler，删除\r\n                }\r\n            }\r\n            //else 本类型事件未被记录，不管了\r\n            eventStore.set(callerElement, record);\r\n        }\r\n        //else 本元素未被记录，不知道调用者在干嘛\r\n        return Reflect.apply(omEL, callerElement, argArray);\r\n    }\r\n});\r\n\r\n//全局mutationobserver\r\nconst observer = new MutationObserver(observerCB);\r\nobserver.observe(document, {\r\n    subtree: true,\r\n    childList: true\r\n});\r\nfunction observerCB(mutations :MutationRecord[]){\r\n    console.log(mutations);\r\n}\r\n\r\n//主类\r\nclass ScopeInstance{\r\n    #rootNode :Element;\r\n    #options? :fdOptions;\r\n    #vDOM? :vElement; //hack:ts真无聊\r\n    constructor(rootNode :Elementy, options? :fdOptions){\r\n        //开发模式记录\r\n        console.info(\"creating new FreeDOM instance with rootNode\", rootNode, \"and options\", options);\r\n\r\n        //输入rootNode\r\n        rootNode = localUtils.misc.reduceToElement(rootNode);\r\n        this.#rootNode = rootNode;\r\n\r\n        //获取vDOM并检测其合法性\r\n        const tree = localUtils.vDOM.parseNode(rootNode);\r\n        if(localUtils.vDOM.misc.isVText(tree) || tree === null) utils.generic.E(\"rootNode\", \"Elementy\", rootNode, \"rootNode should be an Element or a #id selector\");\r\n        else this.#vDOM = tree as vElement; //hack:ts真无聊\r\n        \r\n        //输入options\r\n        this.#options = options;\r\n\r\n        //记录实例，用于事件捕获\r\n        instances.push(this);\r\n    }\r\n    //属性获取\r\n    get rootNode() :Element{return this.#rootNode;}\r\n    get options() :fdOptions | undefined{return this.#options;}\r\n    get vDOM() :vElement | undefined{return this.#vDOM;}\r\n    //vDOM API\r\n    m(){\r\n\r\n    }\r\n    mount(){\r\n\r\n    }\r\n    u(){\r\n\r\n    }\r\n    unmount(){\r\n\r\n    }\r\n    s(){\r\n\r\n    }\r\n    sync(){\r\n\r\n    }\r\n    r(){\r\n\r\n    }\r\n    rsync(){\r\n        \r\n    }\r\n}\r\n\r\n//主对象\r\nconst FreeDOM = {\r\n    //创建实例\r\n    new(rootNode: Elementy, options?: fdOptions | undefined) :ScopeInstance{\r\n        return new ScopeInstance(rootNode, options);\r\n    },\r\n    //信息获取\r\n    get instances(){\r\n        /* 不能将instances直接传出！\r\n         * 第一：会暴露内部变量的地址；\r\n         * ???:第二，会奇怪地导致instances被自动取消可扩展性（Object.isExtensible(instances) === false），进而导致创建新实例无法记录\r\n         * 所以我们选择复制一份\r\n         */\r\n        return [...instances];\r\n    },\r\n    get eventStore(){\r\n        //问题同上第一条\r\n        return new Map(eventStore);\r\n    },\r\n    //vDOM\r\n    c(tagName :string, attrs? :SSkvObject | null, children? :childrenArray) :vElement{\r\n        return localUtils.vDOM.createVElement(tagName, attrs || null, null, children || null, null);\r\n    },\r\n    createVElement(tagName :string, attrs? :SSkvObject | null, children? :childrenArray) :vElement{\r\n        return localUtils.vDOM.createVElement(tagName, attrs || null, null, children || null, null);\r\n    },\r\n    h(tagName :string, attrs? :SSkvObject | null, children? :childrenArray) :vElement{\r\n        return localUtils.vDOM.createVElement(tagName, attrs || null, null, children || null, null);\r\n    },\r\n    t(text :string) :vText{\r\n        if(text === null) utils.generic.E(\"text\", \"string\", text);\r\n        return localUtils.vDOM.createVText(text, null)!;\r\n    },\r\n    createVText(text :string) :vText{\r\n        if(text === null) utils.generic.E(\"text\", \"string\", text);\r\n        return localUtils.vDOM.createVText(text, null)!;\r\n    },\r\n    p(node :Node) :vDOM | null{\r\n        return localUtils.vDOM.parseNode(node);\r\n    },\r\n    parseNode(node :Node) :vDOM | null{\r\n        return localUtils.vDOM.parseNode(node);\r\n    },\r\n    b(vElement :vDOM) :instance{\r\n        return localUtils.vDOM.buildNode(vElement);\r\n    },\r\n    buildNode(vElement :vDOM) :instance{\r\n        return localUtils.vDOM.buildNode(vElement);\r\n    },\r\n    u(vDOM :vDOM) :vDOM{\r\n        return localUtils.vDOM.unlink(vDOM);\r\n    },\r\n    unlink(vDOM :vDOM) :vDOM{\r\n        return localUtils.vDOM.unlink(vDOM);\r\n    },\r\n    //结束 vDOM\r\n    //工具方法\r\n    e(s :string, scope? :Element | Document) :Node | Node[]{return utils.element.e(s, scope);},\r\n}\r\n\r\n//对象导出\r\nutils.generic.constantize(FreeDOM);\r\nexport default FreeDOM;\r\nObject.defineProperty(window, \"FreeDOM\", {\r\n    configurable: false,\r\n    writable: false,\r\n    enumerable: true,\r\n    value: FreeDOM\r\n});","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/wheelsmake/freeDOM\r\n * Licensed under MIT License. https://github.com/wheelsmake/freeDOM/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"../../../utils/index\";\r\nimport * as localUtils from \"./index\";\r\nexport function reduceToElement(input :Elementy) :Element{\r\n    if(input instanceof Element) return input;\r\n    else if(typeof input == \"string\"){\r\n        const el = utils.element.e(input);\r\n        if(el instanceof Node) return el as Element;\r\n    }\r\n    else utils.generic.E(\"rootNode\", \"string | Element\", input, \"rootNode should be a #id selector or an Element\");\r\n    return new Element(); //hack:ts真无聊\r\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","randoma2Z","length","s","i","r","Math","floor","random","String","fromCharCode","precisePop","ele","array","indexOf","splice","E","argument","type","value","reason","undefined","Error","e","scope","Element","document","a","querySelectorAll","match","Array","from","testNodeType","node","Text","isVText","input","keys","isVElement","deltaAttr","element","setAttribute","deltaChildren","childrenVDOM","appendChild","createVElement","tagName","attrs","events","children","instance","toString","id","toLocaleLowerCase","createVText","text","parseNode","test","textNode","textContent","signContent","replace","parent","parentElement","HTMLElement","isContentEditable","remove","attr","attributes","result","name","childNodes","item","push","buildNode","vDOM","createElement","data","createTextNode","unlink","instances","eventStore","Map","Ep","Ep_A","oddEventListener","addEventListener","Proxy","apply","oEL","callerElement","argArray","eventName","handler","arg1","arg2","record","useCapture","capture","processedHandler","target","thisArg","recordValue","thisArg1","thisUseCapture","Reflect","isDuplicated","set","oemoveEventListener","removeEventListener","omEL","has","MutationObserver","mutations","observe","subtree","childList","ScopeInstance","constructor","rootNode","options","el","Node","this","tree","m","mount","u","unmount","sync","rsync","FreeDOM","new","c","h","t","p","b","vElement","constantize","freeze","window","configurable","writable"],"sourceRoot":""}