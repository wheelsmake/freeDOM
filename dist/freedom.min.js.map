{"version":3,"file":"freedom.min.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///../utils/generic.ts","webpack:///../utils/element.ts","webpack:///./src/utils/vdom.ts","webpack:///./src/freedom.ts","webpack:///./src/utils/misc.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/* utils\r\n * ©2022 LJM12914. https://github.com/wheelsmake/utils\r\n * Licensed under MIT License. https://github.com/wheelsmake/utils/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"./index\";\r\nexport function randoma2Z(length :number) :string{ //52\r\n    var s :string = \"\";\r\n    for(let i = 0; i < length; i++){\r\n        let r = Math.floor(Math.random() * 52);\r\n        if(r > 25) s += String.fromCharCode(r + 71);\r\n        else s += String.fromCharCode(r + 65);\r\n    }\r\n    return s;\r\n}\r\nexport function randoma2z029(length :number) :string{ //36\r\n    var s :string = \"\";\r\n    for(let i = 0; i < length; i++){\r\n        let r = Math.floor(Math.random() * 36);\r\n        if(r < 10) s += r;\r\n        else s += String.fromCharCode(r + 87);\r\n    }\r\n    return s;\r\n}\r\nexport function precisePop(ele :any, array :any[]) :any[] | null{\r\n    if(array.indexOf(ele) === -1) return null;\r\n    return array.splice(array.indexOf(ele), 1);\r\n}\r\n//递归冻结对象\r\nexport function constantize(obj :anyObject) :void{\r\n    Object.freeze(obj);\r\n    for(let i = 0; i < Object.keys(obj).length; i++) if(typeof obj[Object.keys(obj)[i]] == \"object\") constantize(obj[Object.keys(obj)[i]]);\r\n}\r\nexport function E(argument :string, type? :string, value? :any, reason? :string) :never{\r\n    if(argument === undefined) throw new Error(\"An error occured.\");\r\n    else{\r\n        console.error(argument, type, value, reason); //为了拿到真正的value，其他类型toString后啥信息都没了\r\n        throw new Error(`Argument '${argument}' ${type ? `should be a(an) ${type}` : \"is invalid\"}${reason ? `, reason: ${reason}` : \"\"}${value ? `, got ${value}` : \"\"}.`);\r\n    }\r\n}\r\nexport function EE(message :any) :never{throw new Error(message);}\r\nexport function repeat(item :any, count :number) :any[]{\r\n    if(typeof count != \"number\" || count < 1) utils.generic.E(\"count\", \"number smaller than 1\", count);\r\n    var arr :any[] = [];\r\n    arr[count - 1] = \" \";\r\n    return arr.fill(item, 0, count);\r\n}","/* utils\r\n * ©2022 LJM12914. https://github.com/wheelsmake/utils\r\n * Licensed under MIT License. https://github.com/wheelsmake/utils/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"./index\";\r\nexport function e(s :string, scope? :Element | Document) :Node[] | Node{\r\n    if(scope === undefined || !(scope instanceof Element)) scope = document;\r\n        let a :NodeList = scope.querySelectorAll(s);\r\n        if(!a.length) return [];\r\n        //note:当一个页面存在相同ID元素时不会走这里，而会返回数组，因为说好了是querySelectorAll了并且本来就不应该有重复ID，不能怪我啊\r\n        if(a.length == 1 && s.match(/^.*#[^\\s]*$/)) return a[0];\r\n        else return Array.from(a);\r\n}\r\nexport function isDescendant(possibleDescendant :Element, possibleParent :Element) :boolean{\r\n    while(possibleDescendant.tagName != \"HTML\"){\r\n        possibleDescendant = possibleDescendant.parentNode! as Element;\r\n        if(possibleDescendant === possibleParent) return true; \r\n    }\r\n    return false;\r\n}\r\nexport function isInDocument(element :Element) :boolean{\r\n    return isDescendant(element, (e(\"html\") as Node[])[0] as Element);\r\n}\r\nexport function isChild(element :Element, target :Element) :boolean{\r\n    const children = target.childNodes;\r\n    for(let i = 0; i < children.length; i++) if(element === children[i]) return true;\r\n    return false;\r\n}\r\nexport function toHTML(HTML :string) :Node[]{\r\n    if(HTML === \"\" || typeof HTML != \"string\") utils.generic.E(\"HTML\", \"string\", HTML);\r\n    const ele = document.createElement(\"div\");\r\n    ele.innerHTML = HTML;\r\n    return getInnerNodes(ele);\r\n}\r\nexport function getInnerNodes(el :Node | Element) :Node[]{\r\n    var nodes :Node[] = [];\r\n    for(let i = 0; i < el.childNodes.length; i++) nodes[i] = el.childNodes[i].cloneNode(true);\r\n    return nodes;\r\n}\r\n//剥壳器\r\nexport function hatch(element :Element, remove? :boolean) :Node[]{\r\n    //note:Nodelist类型会实时同步造成不稳定的for循环，必须转换为Node[]！\r\n    const par = element.parentElement!, children :Node[] = Array.from(element.childNodes);\r\n    for(let i = 0; i < children.length; i++) par.insertBefore(children[i], element);\r\n    if(remove === true) element.remove();\r\n    return children;\r\n}\r\n//fixme:这个方法特异性太强了吧，能不能不要放在这里？\r\n//最终渲染方法，老祖宗求你别出bug\r\nexport function render(HTML :string | Element | HTMLCollection | Element[] | Node | NodeList | Node[], element :Element, insertAfter? :boolean, append? :boolean, disableDF? :boolean) :Node[]{\r\n    if(element.parentElement === null) utils.generic.EE(\"cannot render by '<html>' element, since it's root of document.\");\r\n    var html :Node[] = [];\r\n    if(typeof HTML == \"string\") html = toHTML(HTML);\r\n    else if(HTML instanceof Element || HTML instanceof Node) html[0] = HTML.cloneNode(true);\r\n    else if(HTML instanceof HTMLCollection || HTML instanceof NodeList) for(let i = 0; i < HTML.length; i++) html[i] = HTML.item(i)!.cloneNode(true);\r\n    else html = HTML;\r\n    const Rhtml = [...html].reverse(), parent = element.parentElement;\r\n    if(append === true) for(let i = 0; i < html.length; i++) element.append(html[i]);\r\n    else if(append === false) for(let i = 0; i < Rhtml.length; i++) element.prepend(Rhtml[i]);\r\n    else if(insertAfter === true){\r\n        if(!element.nextSibling) for(let i = 0; i < Rhtml.length; i++) parent!.append(Rhtml[i]);\r\n        else for(let i = 0; i < Rhtml.length; i++) parent!.insertBefore(Rhtml[i], element.nextSibling);\r\n    }\r\n    else if(insertAfter === false) for(let i = 0; i < html.length; i++) parent!.insertBefore(html[i], element);\r\n    else for(let i = 0; i < html.length; i++) element.append(html[i]);\r\n    //todo:加入作用域\r\n    return html;\r\n}","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/wheelsmake/freeDOM\r\n * Licensed under MIT License. https://github.com/wheelsmake/freeDOM/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"../../../utils/index\";\r\nimport * as localUtils from \"./index\";\r\n//这个东西不能导出，否则ts会无法编译\r\nimport * as FreeDOM from \"../freedom\";\r\nfunction testNodeType(node :Node) :\"Text\" | \"Element\" | false{\r\n    if(node instanceof Text) return \"Text\";\r\n    else if(node instanceof Element) return \"Element\";\r\n    else return false;\r\n}\r\nfunction isVElement(input :any) :boolean{\r\n    return(\r\n        typeof input == \"object\"\r\n     && \"id\" in input\r\n     && \"tagName\" in input\r\n     && \"attrs\" in input\r\n     && \"children\" in input\r\n     && \"instance\" in input\r\n    );\r\n}\r\nfunction processNLIText(textNode :Text) :string | null{\r\n    const textContent = textNode.textContent!,\r\n          pContent = textContent.replace(/\\n\\s+/g, \" \"), //插入空格，保持视觉效果\r\n          parent = textNode.parentElement as Element; //replace不改动原字符串\r\n    const shouldKeepNLI = parent.tagName == \"TEXTAREA\" || (parent instanceof HTMLElement && parent.isContentEditable); //排除可编辑内容的元素的内容\r\n    if(!shouldKeepNLI && pContent === \"\"){ //完全就是垃圾节点\r\n        textNode.remove();\r\n        return null;\r\n    }\r\n    else if(!shouldKeepNLI && pContent !== textContent){ //部分垃圾\r\n        textNode.textContent = pContent; //更新文本节点\r\n        return pContent;\r\n    }\r\n    else return textContent;\r\n}\r\nexport function createVElement(tagName :string, attrs? :SSkvObject | null, children? :childrenArray, instance? :Element) :vElement{\r\n    return{\r\n        id: utils.generic.randoma2Z(15),\r\n        tagName: tagName.toLocaleLowerCase(), //fixed:我是傻逼\r\n        attrs: attrs || null,\r\n        children: children || null,\r\n        instance: instance || null\r\n    };\r\n}\r\n/**`null` 仅在垃圾文本节点会出现*/\r\nexport function parseNode(node :Node) :vElement | string | null{\r\n    const test = testNodeType(node);\r\n    if(test == \"Text\") return processNLIText(node as Text);\r\n    else if(test == \"Element\"){\r\n        const element = node as Element;\r\n        return createVElement(element.tagName, extractAttr(element), getChildren(element), element);\r\n    }\r\n    else{\r\n        utils.generic.E(\"node\", \"Element | Text\" , node);\r\n        return \"\"; //hack:ts真无聊\r\n    }\r\n}\r\nfunction extractAttr(element :Element) :anyObject | null{\r\n    const test = testNodeType(element);\r\n    if(test == \"Text\" || test === false) utils.generic.E(\"element\", \"Element\", element, \"only Element have attributes\"); //文本节点不存在attr\r\n    const attr = element.attributes; //typeof NamedNodeMap\r\n    var result :anyObject = {};\r\n    for(let i = 0; i < attr.length; i++) result[attr[i].name] = attr[i].textContent!; //只要传入已有name就不会出null\r\n    /* fixed:已经通过修改addEventListener完成\r\n     * 不能获取元素通过addEventListener绑定的事件\r\n    */\r\n    //从eventStore里弄事件\r\n    if(FreeDOM.eventStore.has(element)){\r\n        const events = FreeDOM.eventStore.get(element)!;\r\n        for(let i = 0; i< Object.keys(events).length; i++){\r\n\r\n        }\r\n    }\r\n    if(Object.keys(result).length === 0) return null;\r\n    else return result;\r\n}\r\nfunction generateAttr(element :Element, data :vElement) :void{\r\n    const attrs = data.attrs;\r\n    for(let i in attrs){\r\n        //todo:别忘了事件\r\n    }\r\n}\r\nfunction getChildren(element :Element/* | Text*/) :childrenArray | undefined{\r\n    const children :NodeList = element.childNodes;\r\n    //argument_solved:用NodeList能避免出现错误，并且可以获得尽可能最新的列表。\r\n    var result :vDOM[] = [];\r\n    for(let i = 0; i < children.length; i++){\r\n        const item = children.item(i);\r\n        if(item === null){ //这里可以避免缺陷for循环，因为i是对的，一个Element的childNodes不可能item出非Node，走到这里的唯一可能就是NodeList出缺陷了\r\n            console.warn(\"DOM structure was changed during freeDOM is parsing nodes. Please avoid that.\");\r\n            continue;\r\n        }\r\n        else parseNode(item); //fixed:我是傻逼，放着现成的parse不用 //递归产生处\r\n    }\r\n    if(result.length === 0) return undefined;\r\n    else return result;\r\n}\r\nfunction generateChildren(element :Element, data :vElement) :void{\r\n    if(data.children === null) return;\r\n    else{\r\n        const children = data.children;\r\n        for(let i = 0; i < children.length; i++) buildNode(children[i]); //递归产生处\r\n    }\r\n}\r\nexport function buildNode(vElement :vElement | string) :instance{\r\n    if(isVElement(vElement)){\r\n        vElement = vElement as vElement; //ts真无聊\r\n        const instance = document.createElement(vElement.tagName);\r\n        generateAttr(instance, vElement);\r\n        generateChildren(instance, vElement);\r\n        return instance;\r\n    }\r\n    else if(typeof vElement == \"string\") return document.createTextNode(vElement);\r\n    else{\r\n        utils.generic.E(\"vElement\", \"vElement\", vElement);\r\n        return new Element(); //hack:ts真无聊\r\n    }\r\n}","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/wheelsmake/freeDOM\r\n * Licensed under MIT License. https://github.com/wheelsmake/freeDOM/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"../../utils/index\";\r\nimport * as localUtils from \"./utils/index\";\r\n\r\n//开发模式记录\r\nconsole.info(\"freeDOM ©LJM12914. https://github.com/openink/freeDOM \\r\\nYou are using an unminified version of freeDOM, which is not suitable for production use.\");\r\n\r\n//事件捕获相关hack变量\r\nconst instances :FreeDOMCore[] = [], eventStore :eventStore = new Map(); //Map浏览器支持率＞96% on 2022.7.23\r\nexport {instances, eventStore}; //暴露这两个变量给utils\r\n\r\n//hack addEventListener\r\n//不能用window.onload，实际上它是最迟执行的\r\nconst Ep = Element.prototype, Ep_A = Ep as anyObject;\r\n\r\nEp_A.oddEventListener = Ep.addEventListener;\r\nEp.addEventListener = new Proxy(Ep_A.oddEventListener, {\r\n    apply(\r\n        oEL :Function,\r\n        callerElement :Element,\r\n        argArray :[string, Function, boolean | AddEventListenerOptions | undefined, boolean | undefined]\r\n        //第四个参数兼容wantUntrusted\r\n    ){\r\n        //note:不需要检查type是否合法，因为存在自定义事件的可能\r\n        //note:选择记录所有DOM的所有事件，其实也不大\r\n        console.log(callerElement, argArray);\r\n        const [eventName, handler, arg1, arg2] = argArray;\r\n        if(eventStore.has(callerElement)){ //本元素已被记录\r\n            const record = eventStore.get(callerElement)!;\r\n            if(record[eventName] === undefined) record[eventName] = [{ //本元素未有该事件，新建数组\r\n                handler, arg1, arg2\r\n            }];\r\n            else{  //本元素已有该事件\r\n                //note:排除重复的事件处理函数，浏览器对于type和handler完全一致的重复调用，会不管第三、四个参数是否相同一律丢弃。因此我们仅需比较前两个参数。\r\n                var isDuplicated = false; //为了能正常return\r\n                for(let i = 0; i < record[eventName].length; i++) if(handler === record[eventName][i].handler){\r\n                    isDuplicated = true;\r\n                    break;\r\n                }\r\n                if(!isDuplicated) record[eventName].push({\r\n                    handler, arg1, arg2\r\n                });\r\n            }\r\n            eventStore.set(callerElement, record);\r\n        }\r\n        else eventStore.set(callerElement, { //本元素未被记录\r\n            [eventName]: [{\r\n                handler, arg1, arg2\r\n            }]\r\n        });\r\n        return Reflect.apply(oEL, callerElement, argArray);\r\n    }\r\n});\r\n\r\nEp_A.oemoveEventListener = Ep.removeEventListener;\r\nEp.removeEventListener = new Proxy(Ep_A.oemoveEventListener, {\r\n    apply(\r\n        omEL :Function,\r\n        callerElement :Element,\r\n        argArray :[string, Function, boolean | AddEventListenerOptions | undefined]\r\n    ){\r\n        console.log(callerElement, argArray);\r\n        const [eventName, handler] = argArray; //arg1没用\r\n        if(eventStore.has(callerElement)){ //本元素已被记录\r\n            const record = eventStore.get(callerElement)!;\r\n            if(record[eventName] !== undefined){ //本元素已有该事件\r\n                for(let i = 0; i < record[eventName].length; i++) if(handler === record[eventName][i].handler){\r\n                    //存在对应handler，删除\r\n                    utils.generic.precisePop(record[eventName][i], record[eventName]);\r\n                }\r\n            }\r\n            //else 本元素未被记录，不管了\r\n            eventStore.set(callerElement, record);\r\n        }\r\n        //else 本元素未被记录，不知道调用者在干嘛\r\n        return Reflect.apply(omEL, callerElement, argArray);\r\n    }\r\n});\r\n\r\n//全局mutationobserver\r\nconst observer = new MutationObserver(observerCB);\r\nobserver.observe(document, {\r\n    subtree: true,\r\n    childList: true\r\n});\r\nfunction observerCB(mutations :any){\r\n    console.log(mutations);\r\n}\r\n\r\n//主类\r\nclass FreeDOMCore{\r\n    #rootNode :Element;\r\n    #options? :fdOptions;\r\n    #vDOM? :vElement; //hack:ts真无聊\r\n    constructor(rootNode :Elementy, options? :fdOptions){\r\n        //开发模式记录\r\n        console.info(\"creating new FreeDOM instance with rootNode\", rootNode, \"and options\", options);\r\n\r\n        //输入rootNode\r\n        rootNode = localUtils.misc.reduceToElement(rootNode);\r\n        this.#rootNode = rootNode;\r\n\r\n        //获取vDOM并检测其合法性\r\n        const tree = localUtils.vDOM.parseNode(rootNode);\r\n        if(typeof tree == \"string\" || tree === null) utils.generic.E(\"rootNode\", \"Element | string\", rootNode, \"rootNode should be an Element or a #id selector\");\r\n        else this.#vDOM = tree;\r\n        \r\n        //输入options\r\n        this.#options = options;\r\n\r\n        //记录实例，用于事件捕获\r\n        instances.push(this);\r\n    }\r\n    //属性获取\r\n    get rootNode() :Element{return this.#rootNode;}\r\n    get options() :fdOptions | undefined{return this.#options;}\r\n    //vDOM API\r\n    m(){\r\n\r\n    }\r\n    mount(){\r\n\r\n    }\r\n    u(){\r\n\r\n    }\r\n    unmount(){\r\n\r\n    }\r\n    s(){\r\n\r\n    }\r\n    sync(){\r\n\r\n    }\r\n    r(){\r\n\r\n    }\r\n    rsync(){\r\n        \r\n    }\r\n}\r\n\r\n//主对象\r\nconst FreeDOM = {\r\n    //创建实例\r\n    new(rootNode: Elementy, options?: fdOptions | undefined) :FreeDOMCore{\r\n        return new FreeDOMCore(rootNode, options);\r\n    },\r\n    //信息获取\r\n    get instances(){\r\n        /* 不能将instances直接传出！\r\n         * 第一：会暴露内部变量的地址；\r\n         * ???:第二，会奇怪地导致instances被自动取消可扩展性（Object.isExtensible(instances) === false），进而导致创建新实例无法记录\r\n         * 所以我们选择复制一份\r\n         */\r\n        return [...instances];\r\n    },\r\n    get eventStore(){\r\n        //问题同上第一条\r\n        return new Map(eventStore);\r\n    },\r\n    //创建vDOM\r\n    c(tagName :string, attrs? :SSkvObject | null, children? :childrenArray) :vElement{\r\n        return localUtils.vDOM.createVElement(tagName, attrs, children);\r\n    },\r\n    createNode(tagName :string, attrs? :SSkvObject | null, children? :childrenArray) :vElement{\r\n        return localUtils.vDOM.createVElement(tagName, attrs, children);\r\n    },\r\n    createElement(tagName :string, attrs? :SSkvObject | null, children? :childrenArray) :vElement{\r\n        return localUtils.vDOM.createVElement(tagName, attrs, children);\r\n    },\r\n    createVElement(tagName :string, attrs? :SSkvObject | null, children? :childrenArray) :vElement{\r\n        return localUtils.vDOM.createVElement(tagName, attrs, children);\r\n    },\r\n    h(tagName :string, attrs? :SSkvObject | null, children? :childrenArray) :vElement{\r\n        return localUtils.vDOM.createVElement(tagName, attrs, children);\r\n    },\r\n    createVNode(tagName :string, attrs? :SSkvObject | null, children? :childrenArray) :vElement{\r\n        return localUtils.vDOM.createVElement(tagName, attrs, children);\r\n    },\r\n    createNodeDescription(tagName :string, attrs? :SSkvObject | null, children? :childrenArray) :vElement{\r\n        return localUtils.vDOM.createVElement(tagName, attrs, children);\r\n    },\r\n    //结束 创建vDOM\r\n    //转换DOM\r\n    p(node :Node) :vElement | string | null{\r\n        return localUtils.vDOM.parseNode(node);\r\n    },\r\n    parseNode(node :Node) :vElement | string | null{\r\n        return localUtils.vDOM.parseNode(node);\r\n    },\r\n    b(vElement :vElement | string) :instance{\r\n        return localUtils.vDOM.buildNode(vElement);\r\n    },\r\n    buildNode(vElement :vElement | string) :instance{\r\n        return localUtils.vDOM.buildNode(vElement);\r\n    },\r\n    //结束 转换vDOM\r\n    //工具方法\r\n    e(s :string, scope? :Element | Document) :Node | Node[]{return utils.element.e(s, scope);},\r\n}\r\n\r\n//对象导出\r\nutils.generic.constantize(FreeDOM);\r\nObject.defineProperty(window, \"FreeDOM\", {\r\n    configurable: false,\r\n    writable: false,\r\n    enumerable: true,\r\n    value: FreeDOM\r\n});","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/wheelsmake/freeDOM\r\n * Licensed under MIT License. https://github.com/wheelsmake/freeDOM/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"../../../utils/index\";\r\nimport * as localUtils from \"./index\";\r\nexport function reduceToElement(input :Elementy) :Element{\r\n    if(input instanceof Element) return input;\r\n    else if(typeof input == \"string\"){\r\n        const el = utils.element.e(input);\r\n        if(el instanceof Node) return el as Element;\r\n    }\r\n    else utils.generic.E(\"rootNode\", \"string | Element\", input, \"rootNode should be a #id selector or an Element\");\r\n    return new Element(); //hack:ts真无聊\r\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","randoma2Z","length","s","i","r","Math","floor","random","String","fromCharCode","E","argument","type","value","reason","undefined","Error","e","scope","Element","document","a","querySelectorAll","match","Array","from","testNodeType","node","Text","createVElement","tagName","attrs","children","instance","id","toLocaleLowerCase","parseNode","test","textNode","textContent","pContent","replace","parent","parentElement","shouldKeepNLI","HTMLElement","isContentEditable","remove","processNLIText","element","attr","attributes","result","name","events","keys","extractAttr","childNodes","item","getChildren","buildNode","vElement","input","createElement","data","generateAttr","generateChildren","createTextNode","instances","eventStore","Map","Ep","Ep_A","oddEventListener","addEventListener","Proxy","apply","oEL","callerElement","argArray","eventName","handler","arg1","arg2","has","record","isDuplicated","push","set","Reflect","oemoveEventListener","removeEventListener","omEL","ele","array","indexOf","splice","MutationObserver","mutations","observe","subtree","childList","FreeDOMCore","constructor","rootNode","options","el","Node","this","tree","m","mount","u","unmount","sync","rsync","FreeDOM","new","c","createNode","h","createVNode","createNodeDescription","p","b","constantize","freeze","window","configurable","writable"],"sourceRoot":""}