{"version":3,"file":"freeDOM.min.js","mappings":"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","sources":["webpack:///./src/utils.ts","webpack:///./src/freeDOM-core.ts","webpack:///./src/freeDOM.ts"],"sourcesContent":["/* freeDOM\r\n * ©2022 LJM12914. https://github.com/openink/freeDOM\r\n * Licensed under MIT License. https://github.com/openink/freeDOM/blob/main/LICENSE\r\n*/\r\nexport function checkNode(node :Node) :\"Text\" | \"HTMLElement\" | \"SVGElement\" | false{\r\n    if(node instanceof Text) return \"Text\";\r\n    else if(node instanceof HTMLElement) return \"HTMLElement\";\r\n    else if(node instanceof SVGElement) return \"SVGElement\";\r\n    else return false;\r\n}\r\n/*export function parseNode(node :Node) :nodeDescription | string{\r\n    switch(checkNode(node)){\r\n        case \"Text\": return (node as Text).textContent || \"\";\r\n        case \"HTMLElement\" || \"SVGElement\":\r\n            var vdom :nodeDescription = {\r\n                tagName: (node as Element).tagName,\r\n                instance: null,\r\n                attributes: getAttr(node),\r\n                childNodes: getChildNodes(node)\r\n            }\r\n            break;\r\n        case false:\r\n            break;\r\n    }\r\n    return \"\"; //hack:永远不会走到这里，都怪ts\r\n}\r\nexport function getAttr(element :Element) :nNullkvObject{\r\n    if(checkNode(element) == \"Text\") E(\"element\", \"Element\", element);\r\n}\r\nexport function getChildNodes(element :Element) :Array<nodeDescription | string>{\r\n\r\n}*/\r\nexport function reduceToElement(input :Element | string) :Element{\r\n    if(typeof input == \"string\") return e(input) as Element;\r\n    else return input;\r\n}\r\nexport function isDescendant(element :Element, target :Element) :boolean{\r\n    while(element.tagName != \"HTML\"){\r\n        element = element.parentNode! as Element;\r\n        if(element === target) return true; \r\n    }\r\n    return false;\r\n}\r\nexport function randoma2Z(length :number) :string{\r\n    var s :string = \"\";\r\n    for(let i = 0; i < length; i++){\r\n        let r = Math.floor(Math.random() * 52);\r\n        if(r > 25) s += String.fromCharCode(r + 71);\r\n        else s += String.fromCharCode(r + 65);\r\n    }\r\n    return s;\r\n}\r\nexport function randoma2Z029(length :number) :string{\r\n    var s :string = \"\";\r\n    for(let i = 0; i < length; i++){\r\n        let r = Math.floor(Math.random() * 36);\r\n        if(r < 10) s += r;\r\n        else s += String.fromCharCode(r + 87);\r\n    }\r\n    return s;\r\n}\r\nexport function e(s :string, scope? :Element | Document) :Node[] | Node{\r\n    if(scope === undefined || !(scope instanceof Element)) scope = document;\r\n        let a :NodeList = scope.querySelectorAll(s);\r\n        if(!a.length) return [];\r\n        //note:当一个页面存在相同ID元素时不会走这里，而会返回数组，因为说好了是querySelectorAll了并且本来就不应该有重复ID，不能怪我啊\r\n        if(a.length == 1 && s.match(/^.*#[^\\s]*$/)) return a[0];\r\n        else return Array.from(a);\r\n}\r\nexport function isInDocument(element :Element) :boolean{\r\n    return isDescendant(element, (e(\"html\") as Node[])[0] as Element);\r\n}\r\nexport function precisePop(ele :any, array :any[]) :any[] | null{\r\n    if(array.indexOf(ele) === -1) return null;\r\n    return array.splice(array.indexOf(ele), 1);\r\n}\r\n//递归冻结对象\r\nexport function constantize(obj :anyObject) :void{\r\n    Object.freeze(obj);\r\n    for(let i = 0; i < Object.keys(obj).length; i++) if(typeof obj[Object.keys(obj)[i]] == \"object\") constantize(obj[Object.keys(obj)[i]]);\r\n}\r\nexport function E(argument? :string, type? :string, value? :any) :never{\r\n    if(argument === undefined) throw new Error(\"An error occured.\");\r\n    else throw new Error(`Argument '${argument}' ${type ? `should be a(an) ${type}` : \"is invalid\"}${value ? `, got ${value}` : \"\"}.`);\r\n}\r\nexport function EE(message :any) :never{throw new Error(message);}\r\nexport function nouse(){\r\n    return 7;\r\n}","import * as utils from \"./utils\";\r\nexport default class FreeDOMCore{\r\n    #rootNode :Element;\r\n    #id :string;\r\n    #key :string;\r\n    //#nodeTree :nodeTree;\r\n    //#nodeStore :nodeStore;\r\n    #alerts = [\r\n        \"DO NOT CALL ME FROM OUTSIDE THE FreeDOM, PLUS YOU CANNOT DO ANYTHING WITHOUT SECRET KEY.\"\r\n    ];\r\n    constructor(rootNode :Element, id :string, key :string){\r\n        this.#rootNode = rootNode;\r\n        this.#id = id;\r\n        this.#key = key;\r\n        //this.#nodeTree = utils.parseNode(rootNode) as nodeDescription; //rootNode不可能是文本节点，new做过判断了\r\n    }\r\n    n(){\r\n        \r\n    }\r\n    h(){return this.n();}\r\n    sync() :void{\r\n\r\n    }\r\n    rsync() /*:nodeDescription*/{\r\n\r\n    }\r\n    d(){\r\n\r\n    }\r\n    getID() :string{return this.#id;}\r\n    getRootNode() :Element{return this.#rootNode;}\r\n    __setRootNodeWithKey__(key :string, rootNode :Element) :Element | undefined{\r\n        if(key === this.#key){\r\n            this.#rootNode = rootNode;\r\n            return this.#rootNode;\r\n        }\r\n        else utils.EE(this.#alerts[0]);\r\n    }\r\n    __setIDWithKey__(key :string, id :string) :string | undefined{\r\n        if(key === this.#key){\r\n            this.#id = id;\r\n            return this.#id;\r\n        }\r\n        else utils.EE(this.#alerts[0]);\r\n    }\r\n}","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/openink/freeDOM\r\n * Licensed under MIT License. https://github.com/openink/freeDOM/blob/main/LICENSE\r\n*/\r\nimport FreeDOMCore from \"./freeDOM-core\";\r\nimport * as utils from \"./utils\";\r\nconsole.warn(\"freeDOM ©LJM12914. https://github.com/openink/freeDOM \\r\\nYou are using an unminified version of freeDOM, which is not suitable for production use.\");\r\nclass FreeDOM{\r\n    #instances :FreeDOMCore[] = [];\r\n    #keys :string[] = [];\r\n    constructor(){\r\n        console.log(\"creating new FreeDOM instance.\");\r\n    }\r\n    id(id :string) :FreeDOMCore | null{\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getID() === id) return this.#instances[i];\r\n        return null;\r\n    }\r\n    rootNode(rootNode :Element | string) :FreeDOMCore | null{\r\n        rootNode = utils.reduceToElement(rootNode);\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getRootNode() === rootNode) return this.#instances[i];\r\n        return null;\r\n    }\r\n    //parseNode(node :Node) :nodeDescription | string{return utils.parseNode(node);}\r\n    new(args :generalArgs) :boolean{\r\n        args.rootNode = utils.reduceToElement(args.rootNode);\r\n        var c = utils.checkNode(args.rootNode);\r\n        if(c != \"HTMLElement\" && c != \"SVGElement\") utils.E(\"rootNode\", \"HTMLElement\");\r\n        //排除已经是目前作用域或目前作用域子元素的新增\r\n        if(!utils.isInDocument(args.rootNode)){\r\n            console.warn(args.rootNode, \" is not in document.\");\r\n            return false;\r\n        }\r\n        for(let i = 0; i < this.#instances.length; i++) if(utils.isDescendant(args.rootNode, this.#instances[i].getRootNode()) || args.rootNode === this.#instances[i].getRootNode()){\r\n            console.warn(args.rootNode, \" is already a descendant of a rootNode of an exist scope, thus freeDOM won't add it.\");\r\n            return false;\r\n        }\r\n        //排除原数组中是新增作用域子元素的元素 //note:不能随便删除作用域实例！！！！！\r\n        //for(let i = 0; i < this.#instances.length; i++) if(utils.isDescendant(this.#instances[i].getRootNode(), args.rootNode)) utils.precisePop(this.#instances[i].getRootNode(), this.#instances);\r\n        \r\n        const key = utils.randoma2Z029(10);\r\n        this.#instances.push(new FreeDOMCore(args.rootNode, args.id, key));\r\n        this.#keys.push(key);\r\n        return true;\r\n    }\r\n    existsID(id :string) :Element | null{\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getID() === id) return this.#instances[i].getRootNode();\r\n        return null;\r\n    }\r\n    existsNode(rootNode :Element) :string | null{\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getRootNode() === rootNode) return this.#instances[i].getID();\r\n        return null;\r\n    }\r\n    updateByID(args :generalArgs) :Element | null{\r\n        args.rootNode = utils.reduceToElement(args.rootNode);\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getID() === args.id) this.#instances[i].__setRootNodeWithKey__(this.#keys[i], args.rootNode);\r\n        return null;\r\n    }\r\n    updateByNode(args :generalArgs) :string | null{\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getRootNode() === args.rootNode) this.#instances[i].__setIDWithKey__(this.#keys[i], args.id);\r\n        return null;\r\n    }\r\n    delete(arg :string | Element) :{id :string, rootNode :Element} | null{\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getID() === arg || this.#instances[i].getRootNode() === arg){\r\n            utils.precisePop(this.#instances[i], this.#instances);\r\n            return{\r\n                id: this.#instances[i].getID(),\r\n                rootNode: this.#instances[i].getRootNode()\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    e(s :string, scope? :Element | Document) :Node | Node[]{return utils.e(s, scope);}\r\n}\r\nutils.constantize(FreeDOM);\r\n(window as any).FreeDOM = FreeDOM;"],"names":["reduceToElement","input","e","isDescendant","element","target","tagName","parentNode","s","scope","undefined","Element","document","a","querySelectorAll","length","match","Array","from","EE","message","Error","FreeDOMCore","constructor","rootNode","id","key","this","n","h","sync","rsync","d","getID","getRootNode","__setRootNodeWithKey__","__setIDWithKey__","FreeDOM","i","new","args","node","c","Text","HTMLElement","SVGElement","argument","type","value","r","Math","floor","random","String","fromCharCode","push","existsID","existsNode","updateByID","updateByNode","delete","arg","ele","array","indexOf","splice","constantize","obj","Object","freeze","keys","window"],"sourceRoot":""}