{"version":3,"file":"freedom.min.js","mappings":"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","sources":["webpack:///./src/commons/commons.generic.ts","webpack:///./src/commons/commons.element.ts","webpack:///./src/commons/commons.misc.ts","webpack:///./src/vElement.ts","webpack:///./src/vText.ts","webpack:///./src/commons/commons.vdom.ts","webpack:///./src/freedom-core.ts","webpack:///./src/freedom.ts"],"sourcesContent":["/* freeDOM\r\n * ©2022 LJM12914. https://github.com/openink/freeDOM\r\n * Licensed under MIT License. https://github.com/openink/freeDOM/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"./index\";\r\nexport function randoma2Z(length :number) :string{ //52\r\n    var s :string = \"\";\r\n    for(let i = 0; i < length; i++){\r\n        let r = Math.floor(Math.random() * 52);\r\n        if(r > 25) s += String.fromCharCode(r + 71);\r\n        else s += String.fromCharCode(r + 65);\r\n    }\r\n    return s;\r\n}\r\nexport function randoma2z029(length :number) :string{ //36\r\n    var s :string = \"\";\r\n    for(let i = 0; i < length; i++){\r\n        let r = Math.floor(Math.random() * 36);\r\n        if(r < 10) s += r;\r\n        else s += String.fromCharCode(r + 87);\r\n    }\r\n    return s;\r\n}\r\nexport function precisePop(ele :any, array :any[]) :any[] | null{\r\n    if(array.indexOf(ele) === -1) return null;\r\n    return array.splice(array.indexOf(ele), 1);\r\n}\r\n//递归冻结对象\r\nexport function constantize(obj :anyObject) :void{\r\n    Object.freeze(obj);\r\n    for(let i = 0; i < Object.keys(obj).length; i++) if(typeof obj[Object.keys(obj)[i]] == \"object\") constantize(obj[Object.keys(obj)[i]]);\r\n}\r\nexport function E(argument? :string, type? :string, value? :any) :never{\r\n    if(argument === undefined) throw new Error(\"An error occured.\");\r\n    else{\r\n        console.error(argument, type, value); //为了拿到真正的value，其他类型toString后啥信息都没了\r\n        throw new Error(`Argument '${argument}' ${type ? `should be a(an) ${type}` : \"is invalid\"}${value ? `, got ${value}` : \"\"}.`);\r\n    }\r\n}\r\nexport function EE(message :any) :never{throw new Error(message);}","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/openink/freeDOM\r\n * Licensed under MIT License. https://github.com/openink/freeDOM/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"./index\";\r\nexport function e(s :string, scope? :Element | Document) :Node[] | Node{\r\n    if(scope === undefined || !(scope instanceof Element)) scope = document;\r\n        let a :NodeList = scope.querySelectorAll(s);\r\n        if(!a.length) return [];\r\n        //note:当一个页面存在相同ID元素时不会走这里，而会返回数组，因为说好了是querySelectorAll了并且本来就不应该有重复ID，不能怪我啊\r\n        if(a.length == 1 && s.match(/^.*#[^\\s]*$/)) return a[0];\r\n        else return Array.from(a);\r\n}\r\nexport function isDescendant(possibleDescendant :Element, possibleParent :Element) :boolean{\r\n    while(possibleDescendant.tagName != \"HTML\"){\r\n        possibleDescendant = possibleDescendant.parentNode! as Element;\r\n        if(possibleDescendant === possibleParent) return true; \r\n    }\r\n    return false;\r\n}\r\nexport function isInDocument(element :Element) :boolean{\r\n    return isDescendant(element, (e(\"html\") as Node[])[0] as Element);\r\n}\r\n/**删除 HTML 文档中因缩进而导致的文本，`\\n (数个空格)`。\r\n*/\r\nexport function removeIndentText(textNode :Text) :void{\r\n    textNode.textContent = textNode.textContent!.replace(/\\n\\s+/g, \"\");\r\n}","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/openink/freeDOM\r\n * Licensed under MIT License. https://github.com/openink/freeDOM/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"./index\";\r\nexport function checkSMArgsnReduce(args :scopeManageArgs) :void{\r\n    if(typeof args.id != \"string\") utils.generic.E(\"id\", \"string\", args.id);\r\n    args.rootNode = reduceToElement(args.rootNode)! as Element;\r\n}\r\nexport function reduceToElement(input :Element | string) :Element | undefined/*hack:ts真无聊*/{\r\n    if(input instanceof Element) return input;\r\n    else if(typeof input == \"string\"){\r\n        const el = utils.element.e(input);\r\n        if(el instanceof Node) return el as Element;\r\n    }\r\n    else utils.generic.EE(`rootNode string should be a #id selector,but received ${input}.`);\r\n}","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/openink/freeDOM\r\n * Licensed under MIT License. https://github.com/openink/freeDOM/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"./commons/index\";\r\nexport default class vElement{\r\n    #tagName :string;\r\n    #attributes :nNullkvObject;\r\n    //#childIDs? :string[];\r\n    #children :vDOM_A;\r\n    #instance? :Element;\r\n    //#parent? :vElement;\r\n    constructor(tagName :string, attributes :nNullkvObject, children :vDOM_A, instance? :Element){\r\n        this.#tagName = tagName;\r\n        this.#attributes = attributes;\r\n        this.#children = children;\r\n        //this.#fID = utils.generic.randoma2Z(10); //144,555,105,949,057,024了，不会撞上吧？\r\n        if(instance){\r\n            this.#instance = instance;\r\n            //if(parent) this.#parent = parent;\r\n            //else utils.generic.E(\"parent\", \"vElement\", parent); //note:如果这个是根节点，那么就不需要搞parent了\r\n            //else this.#fID = \"rootNode\";\r\n        }\r\n/**/}\r\n//////CRUD\r\n/**/getInfo() :{tagName: string; attributes: nNullkvObject; children: vDOM_A; instance: Element | undefined;}{\r\n        return{\r\n            tagName: this.#tagName,\r\n            attributes: this.#attributes,\r\n            children: this.#children,\r\n            instance: this.#instance\r\n        }\r\n    }\r\n    //__getParent__() :string | undefined{return this.#parentID;}\r\n    //__getID__() :string{return this.#fID;}\r\n}","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/openink/freeDOM\r\n * Licensed under MIT License. https://github.com/openink/freeDOM/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"./commons/index\";\r\nimport vElement from \"./vElement\";\r\nexport default class vText{\r\n    #textContent :string;\r\n    #instance? :Text;\r\n    //#fID :string;\r\n    constructor(textContent :string, instance? :Text){\r\n        this.#textContent = textContent;\r\n        if(instance){\r\n            this.#instance = instance;\r\n        }\r\n        //this.#fID = utils.generic.randoma2Z(10); //144,555,105,949,057,024了，不会撞上吧？\r\n/**/}\r\n//////CRUD\r\n/**/getInfo() :{textContent: string; instance: Text | undefined;}{\r\n        return{\r\n            textContent: this.#textContent,\r\n            instance: this.#instance\r\n        }\r\n    }\r\n    //__getParent__() :string | undefined{return this.#parentID;}\r\n}","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/openink/freeDOM\r\n * Licensed under MIT License. https://github.com/openink/freeDOM/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"./index\";\r\nimport vElement from \"../vElement\";\r\nimport vText from \"../vText\";\r\nimport * as tagNames from \"../tagNames\";\r\nexport function testNodeType(node :Node) :\"Text\" | \"Element\" | false{\r\n    if(node instanceof Text) return \"Text\";\r\n    else if(node instanceof Element) return \"Element\";\r\n    else return false;\r\n}\r\nexport function createVElementFromData(tagName :string, attributes :nNullkvObject, children :vDOM_A) :vElement{\r\n    return new vElement(tagName, attributes, children);\r\n}\r\nfunction createVElement(element :Element) :vElement{\r\n    return new vElement(element.tagName.toLocaleLowerCase(), extractAttr(element), getChildren(element), element);\r\n}\r\nexport function createVTextFromData(textContent :string) :vText{\r\n    return new vText(textContent);\r\n}\r\nfunction createVText(text :Text) :vText{\r\n    utils.element.removeIndentText(text);\r\n    return new vText(text.textContent!, text); //!：https://developer.mozilla.org/zh-CN/docs/Web/API/Node/textContent#:~:text=%E5%A6%82%E6%9E%9C%E8%8A%82%E7%82%B9%E6%98%AF%E4%B8%80%E4%B8%AA%20document%EF%BC%8C%E6%88%96%E8%80%85%E4%B8%80%E4%B8%AA%C2%A0DOCTYPE%20%EF%BC%8C%E5%88%99%C2%A0textContent%C2%A0%E8%BF%94%E5%9B%9E%20null\r\n}\r\n/**其实只可能得到 `vDOM`，大胆用 `!` 吧*/\r\nexport function parseNode(node :Node) :vDOM | undefined/*hack:ts真无聊*/{\r\n    const test = testNodeType(node);\r\n    if(test == \"Text\") return createVText(node as Text);\r\n    else if(test == \"Element\") return createVElement(node as Element);\r\n    else utils.generic.E(\"node\", \"Element | Text\" , node);\r\n}\r\nexport function extractAttr(element :Element) :nNullkvObject{\r\n    const test = testNodeType(element);\r\n    if(test == \"Text\" || test === false) utils.generic.E(\"element\", \"Element\", element); //文本节点不存在attr\r\n    const attr = element.attributes; //typeof NamedNodeMap\r\n    var result :nNullkvObject = {};\r\n    for(let i = 0; i < attr.length; i++) result[attr[i].name] = attr[i].textContent!; //!：同#L19\r\n    return result;\r\n}\r\nexport function getChildren(element :Element/* | Text*/) :vDOM_A{\r\n    const children :NodeList = element.childNodes;\r\n    //argument:这里用Node[]会更正常一点，因为NodeList是动态变化的？\r\n    //argument:不行，就是要使用动态变化的nodeList来实时监测节点是否动了，否则等一下建了个错误的vDOM树\r\n    //argument:但是…………………………这样不会造成缺陷for循环吗？？？\r\n    var result :vDOM_A = [];\r\n    for(let i = 0; i < children.length; i++){\r\n        const test = testNodeType(children.item(i)!);\r\n        if(test == \"Element\"){\r\n            const child_i = children.item(i) as Element;\r\n            result.push(createVElement(child_i)); //产生递归处\r\n        }\r\n        else if(test == \"Text\"){\r\n            const textNode = children.item(i) as Text;\r\n            utils.element.removeIndentText(textNode);\r\n            result.push(createVText(textNode));\r\n        }\r\n        else continue; //argument:这里可以避免缺陷for循环\r\n    }\r\n    return result;\r\n}","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/openink/freeDOM\r\n * Licensed under MIT License. https://github.com/openink/freeDOM/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"./commons/index\";\r\nimport vElement from \"./vElement\";\r\nexport default class FreeDOMCore{\r\n    #rootNode :Element;\r\n    #id :string;\r\n    #nodeTree :nodeTree;\r\n    #nodeStore :nodeStore = {};\r\n    #alerts = [\r\n        \"DO NOT CALL ME FROM OUTSIDE THE FreeDOM, PLUS YOU CANNOT DO ANYTHING WITHOUT SECRET KEY.\"\r\n    ];\r\n    constructor(rootNode :Element, id :string){\r\n        this.#rootNode = rootNode;\r\n        this.#id = id;\r\n        this.#nodeTree = utils.vDOM.parseNode(rootNode) as vElement; //rootNode不可能是文本节点，new做过判断了\r\n/**/}\r\n//////API\r\n/**/m(){\r\n\r\n    }\r\n    mount(){}\r\n    r(){}\r\n    render(){}\r\n    um(){\r\n\r\n    }\r\n    unmount(){}\r\n    s(){\r\n\r\n    }\r\n    sync(){}\r\n    rs(){\r\n\r\n    }\r\n/**/rsync(){}\r\n//////CRUD\r\n/**/getID() :string{return this.#id;}\r\n    getRootNode() :Element{return this.#rootNode;}\r\n    __setRootNode__(rootNode :Element) :Element{\r\n        const oldRootNode = this.#rootNode;\r\n        this.#rootNode = rootNode;\r\n        return oldRootNode;\r\n    }\r\n    __setID__(id :string) :string{\r\n        const oldID = this.#id;\r\n        this.#id = id;\r\n        return oldID;\r\n    }\r\n    __getNodeTree__(){return this.#nodeTree;}\r\n}","/* freeDOM\r\n * ©2022 LJM12914. https://github.com/openink/freeDOM\r\n * Licensed under MIT License. https://github.com/openink/freeDOM/blob/main/LICENSE\r\n*/\r\nimport * as utils from \"./commons/index\";\r\nimport FreeDOMCore from \"./freedom-core\";\r\nimport vElement from \"./vElement\";\r\nimport vText from \"./vText\";\r\nconsole.info(\"freeDOM ©LJM12914. https://github.com/openink/freeDOM \\r\\nYou are using an unminified version of freeDOM, which is not suitable for production use.\");\r\nclass FreeDOM{\r\n    #instances :FreeDOMCore[] = [];\r\n    constructor(){\r\n        console.info(\"creating new FreeDOM instance.\");\r\n/**/}\r\n//////作用域CRUD\r\n/**/new(args :scopeManageArgs) :FreeDOMCore | null{\r\n        utils.misc.checkSMArgsnReduce(args);\r\n        args.rootNode = args.rootNode as Element; //hack:ts真无聊\r\n        //排除已经是目前作用域或目前作用域子元素的新增\r\n        if(!utils.element.isInDocument(args.rootNode)){\r\n            console.warn(args.rootNode, \" is not in document.\");\r\n            return null;\r\n        }\r\n        for(let i = 0; i < this.#instances.length; i++){\r\n            if(utils.element.isDescendant(args.rootNode, this.#instances[i].getRootNode()) || args.rootNode === this.#instances[i].getRootNode()){\r\n                console.warn(args.rootNode, \" is already a descendant of a rootNode of an exist scope, thus freeDOM won't add it.\");\r\n                return null;\r\n            }\r\n            else if(args.id === this.#instances[i].getID()){\r\n                console.error(args.id, \"is duplicated.\");\r\n                return null;\r\n            }\r\n            else if(args.rootNode === this.#instances[i].getRootNode()){\r\n                console.error(args.rootNode, \"is duplicated.\");\r\n                return null;\r\n            }\r\n        }\r\n        //note:不能随便删除作用域实例！！！！！\r\n        const instance = new FreeDOMCore(args.rootNode, args.id);\r\n        this.#instances.push(instance);\r\n        return instance;\r\n    }\r\n    existsID(id :string) :Element | null{\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getID() === id) return this.#instances[i].getRootNode();\r\n        return null;\r\n    }\r\n    existsNode(rootNode :Element) :string | null{\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getRootNode() === rootNode) return this.#instances[i].getID();\r\n        return null;\r\n    }\r\n    updateByID(args :scopeManageArgs) :Element | null{\r\n        utils.misc.checkSMArgsnReduce(args);\r\n        args.rootNode = args.rootNode as Element; //hack:ts真无聊\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getID() === args.id) return this.#instances[i].__setRootNode__(args.rootNode);\r\n        return null;\r\n    }\r\n    updateByNode(args :scopeManageArgs) :string | null{\r\n        utils.misc.checkSMArgsnReduce(args);\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getRootNode() === args.rootNode) return this.#instances[i].__setID__(args.id);\r\n        return null;\r\n    }\r\n    delete(arg :string | Element) :{id :string, rootNode :Element} | null{\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getID() === arg || this.#instances[i].getRootNode() === arg){\r\n            utils.generic.precisePop(this.#instances[i], this.#instances);\r\n            return{\r\n                id: this.#instances[i].getID(),\r\n                rootNode: this.#instances[i].getRootNode()\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    id(id :string) :FreeDOMCore | null{\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getID() === id) return this.#instances[i];\r\n        return null;\r\n    }\r\n    rootNode(rootNode :Element | string) :FreeDOMCore | null{\r\n        const trueRootNode = utils.misc.reduceToElement(rootNode);\r\n        for(let i = 0; i < this.#instances.length; i++) if(this.#instances[i].getRootNode() === trueRootNode) return this.#instances[i];\r\n        return null;\r\n/**/}\r\n//////工具方法\r\n/**/h(tagName :string, attributes :nNullkvObject, children :vDOM_A) :vElement{return utils.vDOM.createVElementFromData(tagName, attributes, children);}\r\n    createNode(tagName :string, attributes :nNullkvObject, children :vDOM_A) :vElement{return utils.vDOM.createVElementFromData(tagName, attributes, children);}\r\n    p(node :Node) :vDOM{return utils.vDOM.parseNode(node)!;}\r\n    parseNode(node :Node) :vDOM{return utils.vDOM.parseNode(node)!;}\r\n    b(sda :anyObject){\r\n        \r\n    }\r\n    buildNode(){}\r\n    d(){\r\n\r\n    }\r\n    difu(){}\r\n    e(s :string, scope? :Element | Document) :Node | Node[]{return utils.element.e(s, scope);}\r\n}\r\nutils.generic.constantize(FreeDOM);\r\n(window as any).FreeDOM = FreeDOM;"],"names":["E","argument","type","value","undefined","Error","e","s","scope","Element","document","a","querySelectorAll","length","match","Array","from","isDescendant","possibleDescendant","possibleParent","tagName","parentNode","removeIndentText","textNode","textContent","replace","checkSMArgsnReduce","args","id","rootNode","reduceToElement","input","el","Node","message","vElement","constructor","attributes","children","instance","this","getInfo","vText","testNodeType","node","Text","createVElementFromData","createVElement","element","toLocaleLowerCase","test","attr","result","i","name","extractAttr","childNodes","item","child_i","push","createVText","getChildren","text","parseNode","FreeDOMCore","m","mount","r","render","um","unmount","sync","rs","rsync","getID","getRootNode","__setRootNode__","oldRootNode","__setID__","oldID","__getNodeTree__","FreeDOM","new","existsID","existsNode","updateByID","updateByNode","delete","arg","ele","array","indexOf","splice","trueRootNode","h","createNode","p","b","sda","buildNode","d","difu","constantize","obj","Object","freeze","keys","window"],"sourceRoot":""}